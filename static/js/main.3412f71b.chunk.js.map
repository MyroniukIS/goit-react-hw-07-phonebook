{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","img/icon.png","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","styles","form_container","preventDefault","inputName","inputNumber","form_label","form_input","type","pattern","title","onChange","required","form_button","contactsAdd","createAction","contactsDelete","contactsFilter","ContactList","items","dispatch","useDispatch","contactsList","map","id","item","item_text","item_button","onClick","actions","list","Filter","onFilterChange","filter","useSelector","state","contacts","filter_label","filter_input","App","src","phonebook","alt","find","alert","toLowerCase","includes","createReducer","payload","uuidv4","_","combineReducers","persistConfig","key","storage","rootReducer","contactsReducer","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3412f71b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__2__--\",\"filter_input\":\"Filter_filter_input__22ubG\"};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const inputName = e.currentTarget.name.value;\r\n    const inputNumber = e.currentTarget.number.value;\r\n\r\n    onSubmit(inputName, inputNumber);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form_container} onSubmit={handleSubmit}>\r\n      <label className={styles.form_label}>\r\n        Name\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.form_label}>\r\n        Number\r\n        <input\r\n          className={styles.form_input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.form_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst contactsAdd = createAction('contacts/add');\r\nconst contactsDelete = createAction('contacts/delete');\r\nconst contactsFilter = createAction('contacts/filter');\r\n\r\nexport default { contactsAdd, contactsDelete, contactsFilter };\r\n","import styles from './ContactList.module.css';\r\nimport { PropTypes } from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport actions from '../../redux/contacts/contacts-actions.js';\r\n\r\nfunction ContactList({ items }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const contactsList = items.map(({ id, name, number }) => (\r\n    <li className={styles.item} key={id}>\r\n      <div>\r\n        <span className={styles.item_text}>\r\n          {name}: {number}\r\n        </span>\r\n        <button\r\n          className={styles.item_button}\r\n          id={id}\r\n          type=\"button\"\r\n          onClick={() => dispatch(actions.contactsDelete(id))}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return <ul className={styles.list}>{contactsList}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styles from './Filter.module.css';\r\nimport { PropTypes } from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Filter({ onFilterChange }) {\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  return (\r\n    <label className={styles.filter_label}>\r\n      Find contacts by name:\r\n      <input\r\n        className={styles.filter_input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/icon.cb73099c.png\";","import React from 'react';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport phonebook from './img/icon.png';\nimport { useSelector, useDispatch } from 'react-redux';\nimport actions from './redux/contacts/contacts-actions.js';\n\nexport default function App() {\n  const items = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const addContact = (name, number) => {\n    if (items.find(item => item.name === name)) {\n      alert(`Inputed ${name} is already in the contacts`);\n      return;\n    }\n\n    return dispatch(actions.contactsAdd({ name, number }));\n  };\n\n  const handleFilterContacts = e => {\n    return dispatch(actions.contactsFilter(e.currentTarget.value));\n  };\n\n  const getFilteredContacts = () => {\n    return items.filter(({ name }) => name.toLowerCase().includes(filter));\n  };\n\n  return (\n    <div className=\"main_container\">\n      <div className=\"main_title_container\">\n        <img className=\"main_title_img\" src={phonebook} alt=\"phonebook-icon\" />\n        <h1 className=\"main_title\">Phonebook</h1>\n      </div>\n\n      <ContactForm onSubmit={addContact} />\n\n      <h2 className=\"title\">Contacts</h2>\n      <Filter onFilterChange={handleFilterContacts} />\n      <ContactList items={getFilteredContacts()} />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport actions from './contacts-actions.js';\r\n\r\nconst items = createReducer([], {\r\n  [actions.contactsAdd]: (state, { payload }) => {\r\n    return [{ ...payload, id: uuidv4() }, ...state];\r\n  },\r\n  [actions.contactsDelete]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.contactsFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducers';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'items',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(persistConfig, rootReducer),\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store.js';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"ContactForm_form_container__3CIq6\",\"form_input\":\"ContactForm_form_input__2kdlo\",\"form_label\":\"ContactForm_form_label__13vZ4\",\"form_button\":\"ContactForm_form_button__1Acs5\",\"animate_grow\":\"ContactForm_animate_grow__E-bdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__MDIqb\",\"item\":\"ContactList_item__HzoFn\",\"item_text\":\"ContactList_item_text__3Xjy2\",\"item_button\":\"ContactList_item_button__M4jel\"};"],"sourceRoot":""}